{"ast":null,"code":"var _jsxFileName = \"E:\\\\FitnessTracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CssBaseline, AppBar, Toolbar, Typography, Container, Box, Tab, Tabs, TextField, MenuItem, Button, FormControl, InputLabel, Select, Checkbox, FormControlLabel, FormGroup, Paper, Grid, RadioGroup, Radio, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, CircularProgress } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport PsychologyIcon from '@mui/icons-material/Psychology'; // For the Gemini API button\n\n// Define a dark theme for Material UI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#007bff' // Standard Blue\n    },\n    secondary: {\n      main: '#B0C4DE' // LightSteelBlue\n    },\n    error: {\n      main: '#dc3545' // Standard Red for error buttons\n    },\n    success: {\n      main: '#28a745' // Standard Green for success buttons\n    },\n    background: {\n      default: '#1a202c',\n      // Darker background for consistency\n      paper: 'rgba(26, 32, 44, 0.7)' // Slightly transparent dark blue-gray for cards/paper\n    },\n    text: {\n      primary: '#E6E6FA',\n      // Lavender - Brighter\n      secondary: '#B0C4DE',\n      // LightSteelBlue - Brighter\n      disabled: '#A9A9A9' // DarkGray - Brighter\n    }\n  },\n  typography: {\n    fontFamily: 'Inter, sans-serif',\n    h4: {\n      fontWeight: 600\n    },\n    h5: {\n      fontWeight: 600\n    },\n    h6: {\n      fontWeight: 600\n    }\n  },\n  components: {\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backdropFilter: 'blur(10px)',\n          WebkitBackdropFilter: 'blur(10px)',\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n          boxShadow: '0 8px 32px 0 rgba(0, 0, 0, 0.57)',\n          // Stronger shadow for depth\n          borderRadius: '10px',\n          backgroundColor: 'rgba(26, 32, 44, 0.7)' // Ensure paper uses consistent transparent dark background\n        }\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          backgroundColor: 'rgba(0, 0, 0, 0.4)',\n          // Slightly more opaque dark background for inputs\n          color: '#E6E6FA',\n          // Light text color\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'rgba(255, 255, 255, 0.3)' // Lighter border for visibility\n          },\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'rgba(255, 255, 255, 0.5)' // Even lighter on hover\n          },\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#58a6ff'\n          },\n          '& input[type=\"date\"]': {\n            colorScheme: 'dark' // Hint to the browser for dark mode calendar\n          }\n        }\n      }\n    },\n    MuiInputLabel: {\n      // Style for input labels\n      styleOverrides: {\n        root: {\n          color: '#B0C4DE',\n          // Lightsteelblue for labels\n          '&.Mui-focused': {\n            color: '#58a6ff' // Focus color\n          }\n        }\n      }\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          backgroundColor: 'rgba(0, 0, 0, 0.4)',\n          // Consistent input background\n          color: '#E6E6FA'\n        },\n        icon: {\n          color: '#E6E6FA' // Ensure dropdown arrow is visible\n        }\n      }\n    },\n    MuiCheckbox: {\n      styleOverrides: {\n        root: {\n          color: '#A9A9A9',\n          // Light gray for unchecked state\n          '&.Mui-checked': {\n            color: '#007bff' // Accent color when checked\n          }\n        }\n      }\n    },\n    MuiRadio: {\n      styleOverrides: {\n        root: {\n          color: '#B0C4DE',\n          '&.Mui-checked': {\n            color: '#007bff'\n          }\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          borderRadius: '8px',\n          textTransform: 'none',\n          fontWeight: 'bold',\n          padding: '10px 20px' // More comfortable padding\n        },\n        containedPrimary: {\n          backgroundColor: '#007bff',\n          '&:hover': {\n            backgroundColor: '#0056b3'\n          }\n        },\n        containedSuccess: {\n          backgroundColor: '#28a745',\n          '&:hover': {\n            backgroundColor: '#1e7e34'\n          }\n        },\n        containedError: {\n          backgroundColor: '#dc3545',\n          '&:hover': {\n            backgroundColor: '#c82333'\n          }\n        },\n        containedSecondary: {\n          backgroundColor: 'rgba(48, 54, 61, 0.6)',\n          // Slightly darker secondary button\n          color: '#E6E6FA',\n          // Primary text color for secondary buttons\n          '&:hover': {\n            backgroundColor: 'rgba(48, 54, 61, 0.8)'\n          }\n        }\n      }\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          color: '#B0C4DE',\n          // Inactive tab text color\n          '&.Mui-selected': {\n            color: '#E6E6FA' // Active tab text color\n          }\n        }\n      }\n    },\n    MuiDialog: {\n      // Style for dialogs\n      styleOverrides: {\n        paper: {\n          backgroundColor: '#2d3748',\n          // Darker background for dialog content\n          backgroundImage: 'none' // Remove default Material UI diagonal lines\n        }\n      }\n    },\n    MuiDialogTitle: {\n      styleOverrides: {\n        root: {\n          color: '#E6E6FA' // Consistent title color\n        }\n      }\n    },\n    MuiDialogContentText: {\n      styleOverrides: {\n        root: {\n          color: '#B0C4DE' // Consistent text color\n        }\n      }\n    }\n  }\n});\n\n// Unit Conversion Constants\nconst KG_TO_LBS_FACTOR = 2.20462;\nconst CM_TO_INCHES_FACTOR = 0.393701;\nconst INCHES_TO_CM_FACTOR = 2.54;\nconst FEET_TO_CM_FACTOR = 30.48;\n\n// Local Storage Keys\nconst LOCAL_STORAGE_KEY = 'dailyFitnessTrackerData';\nconst SYSTEM_UNIT_KEY = 'unitSystem';\nconst CUSTOM_SUPPLEMENTS_KEY = 'customSupplements';\n\n// Helper Functions for Data Handling\nconst convertWeight = (weight, fromUnit, toUnit) => {\n  if (fromUnit === toUnit) return weight;\n  if (fromUnit === 'kg' && toUnit === 'lbs') return weight * KG_TO_LBS_FACTOR;\n  if (fromUnit === 'lbs' && toUnit === 'kg') return weight / KG_TO_LBS_FACTOR;\n  return weight;\n};\nconst convertHeightToCm = (heightValue, fromUnit, fromInches = 0) => {\n  if (fromUnit === 'cm') return heightValue;\n  if (fromUnit === 'inches') return heightValue * INCHES_TO_CM_FACTOR;\n  if (fromUnit === 'ft/in') {\n    return heightValue * FEET_TO_CM_FACTOR + fromInches * INCHES_TO_CM_FACTOR;\n  }\n  return heightValue;\n};\nconst convertCmToDisplayHeight = (heightCm, toUnit) => {\n  if (toUnit === 'cm') return heightCm;\n  if (toUnit === 'inches') return heightCm * CM_TO_INCHES_FACTOR;\n  if (toUnit === 'ft/in') {\n    const totalInches = heightCm * CM_TO_INCHES_FACTOR;\n    const feet = Math.floor(totalInches / 12);\n    const inches = totalInches % 12;\n    return {\n      feet: feet,\n      inches: inches\n    };\n  }\n  return heightCm;\n};\nconst calculateBMI = (weightKg, heightCm) => {\n  if (weightKg === null || isNaN(weightKg) || heightCm === null || isNaN(heightCm) || heightCm <= 0) {\n    return null;\n  }\n  const heightM = heightCm / 100;\n  return (weightKg / (heightM * heightM)).toFixed(2);\n};\nconst getTodayDate = () => {\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = String(today.getMonth() + 1).padStart(2, '0');\n  const day = String(today.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nconst workoutSplits = ['Chest', 'Biceps', 'Back', 'Triceps', 'Shoulder', 'Traps', 'Forearms', 'Abs', 'Legs', 'Cardio', 'Rest Day', 'Other'];\nconst painLevels = ['1 - None', '2 - Very Mild', '3 - Mild', '4 - Moderate', '5 - Annoying', '6 - Distracting', '7 - Severe', '8 - Very Severe', '9 - Excruciating', '10 - Unbearable'];\nfunction App() {\n  _s();\n  const [currentTab, setCurrentTab] = useState(0); // 0: Entry Form, 1: Summary, 2: Filter, 3: Progress\n  const [fitnessEntries, setFitnessEntries] = useState([]);\n  const [customSupplements, setCustomSupplements] = useState([]);\n  const [unitSystem, setUnitSystem] = useState('metric');\n  const [currentEditingIndex, setCurrentEditingIndex] = useState(-1);\n  const [isFilteredViewActive, setIsFilteredViewActive] = useState(false);\n\n  // Form State\n  const [trackDate, setTrackDate] = useState(getTodayDate());\n  const [weight, setWeight] = useState('');\n  const [heightCm, setHeightCm] = useState('');\n  const [heightFeet, setHeightFeet] = useState('');\n  const [heightInches, setHeightInches] = useState('');\n  const [workoutSplit, setWorkoutSplit] = useState([]);\n  const [painLevel, setPainLevel] = useState('');\n  const [notes, setNotes] = useState('');\n  const [formSupplements, setFormSupplements] = useState([]); // State for supplements in the form\n\n  // Filter State\n  const [filterStartDate, setFilterStartDate] = useState('');\n  const [filterEndDate, setFilterEndDate] = useState('');\n  const [filterWorkout, setFilterWorkout] = useState('');\n  const [sortOrder, setSortOrder] = useState('desc');\n\n  // Supplement Management Dialog State\n  const [isManageSupplementsOpen, setIsManageSupplementsOpen] = useState(false);\n  const [newSupplementName, setNewSupplementName] = useState('');\n  const [isConfirmClearOpen, setIsConfirmClearOpen] = useState(false);\n  const [isConfirmDeleteEntryOpen, setIsConfirmDeleteEntryOpen] = useState(false);\n  const [entryToDeleteIndex, setEntryToDeleteIndex] = useState(null);\n\n  // LLM Integration State\n  const [llmInsight, setLlmInsight] = useState('');\n  const [isLlmLoading, setIsLlmLoading] = useState(false);\n  const [isInsightDialogOpen, setIsInsightDialogOpen] = useState(false);\n\n  // Load data from localStorage on initial render\n  useEffect(() => {\n    const storedEntries = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (storedEntries) {\n      try {\n        const parsedEntries = JSON.parse(storedEntries);\n        setFitnessEntries(parsedEntries.sort((a, b) => new Date(b.date) - new Date(a.date)));\n      } catch (e) {\n        console.error(\"Error parsing stored data from localStorage:\", e);\n        setFitnessEntries([]);\n      }\n    }\n    const storedSupplements = localStorage.getItem(CUSTOM_SUPPLEMENTS_KEY);\n    if (storedSupplements) {\n      try {\n        setCustomSupplements(JSON.parse(storedSupplements));\n      } catch (e) {\n        console.error(\"Error parsing custom supplements from localStorage:\", e);\n        setCustomSupplements(['Protein', 'Creatine', 'EAA']); // Fallback\n      }\n    } else {\n      setCustomSupplements(['Protein', 'Creatine', 'EAA']);\n    }\n    const savedSystem = localStorage.getItem(SYSTEM_UNIT_KEY) || 'metric';\n    setUnitSystem(savedSystem);\n  }, []);\n\n  // Effect to update formSupplements when customSupplements change\n  useEffect(() => {\n    if (currentEditingIndex === -1) {\n      setFormSupplements(customSupplements.map(name => ({\n        name,\n        taken: false,\n        quantity: ''\n      })));\n    } else {\n      const entry = fitnessEntries[currentEditingIndex];\n      const updatedFormSupps = customSupplements.map(supName => {\n        const existingSup = (entry.supplements || []).find(s => s.name === supName);\n        return existingSup || {\n          name: supName,\n          taken: false,\n          quantity: ''\n        };\n      });\n      setFormSupplements(updatedFormSupps);\n    }\n  }, [customSupplements, unitSystem, currentEditingIndex, fitnessEntries]);\n\n  // Save data to localStorage whenever fitnessEntries or customSupplements change\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(fitnessEntries));\n  }, [fitnessEntries]);\n  useEffect(() => {\n    localStorage.setItem(CUSTOM_SUPPLEMENTS_KEY, JSON.stringify(customSupplements));\n  }, [customSupplements]);\n\n  // Handle Tab Change\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n    if (newValue === 3) {\n      // Progress tab\n      setFilterStartDate('');\n      setFilterEndDate('');\n      setFilterWorkout('');\n      setSortOrder('desc');\n      setIsFilteredViewActive(false);\n    }\n  };\n\n  // Handle Unit System Change\n  const handleUnitSystemChange = event => {\n    const newSystem = event.target.value;\n    setUnitSystem(newSystem);\n    localStorage.setItem(SYSTEM_UNIT_KEY, newSystem);\n    setHeightCm('');\n    setHeightFeet('');\n    setHeightInches('');\n  };\n\n  // Form Submission Handler\n  const handleSubmit = event => {\n    event.preventDefault();\n    let weightValue = parseFloat(weight);\n    if (isNaN(weightValue)) {\n      alert('Please enter a valid weight.');\n      return;\n    }\n    if (unitSystem === 'imperial') {\n      weightValue = convertWeight(weightValue, 'lbs', 'kg');\n    }\n    let heightValue;\n    if (unitSystem === 'metric') {\n      heightValue = parseFloat(heightCm);\n      if (isNaN(heightValue) || heightValue <= 0) {\n        alert('Please enter a valid height in centimeters.');\n        return;\n      }\n    } else {\n      // imperial\n      const feet = parseFloat(heightFeet);\n      const inches = parseFloat(heightInches);\n      if (isNaN(feet) || isNaN(inches)) {\n        alert('Please enter valid values for both feet and inches.');\n        return;\n      }\n      if (feet === 0 && inches === 0 || feet < 0 || inches < 0) {\n        alert('Height must be a positive value.');\n        return;\n      }\n      heightValue = convertHeightToCm(feet, 'ft/in', inches);\n    }\n    const supplementsTaken = formSupplements.filter(s => s.taken);\n    const newEntryData = {\n      date: trackDate,\n      weight: weightValue,\n      // Always stored in KG\n      height: heightValue,\n      // Always stored in CM\n      workoutSplit: workoutSplit,\n      painLevel: painLevel,\n      notes: notes,\n      supplements: supplementsTaken\n    };\n    let updatedEntries;\n    if (currentEditingIndex > -1) {\n      updatedEntries = [...fitnessEntries];\n      updatedEntries[currentEditingIndex] = newEntryData;\n      setCurrentEditingIndex(-1);\n    } else {\n      const existingEntryIndex = fitnessEntries.findIndex(entry => entry.date === newEntryData.date);\n      if (existingEntryIndex !== -1) {\n        if (window.confirm(`An entry for ${newEntryData.date} already exists. Do you want to update it?`)) {\n          updatedEntries = [...fitnessEntries];\n          updatedEntries[existingEntryIndex] = newEntryData;\n        } else {\n          return;\n        }\n      } else {\n        updatedEntries = [...fitnessEntries, newEntryData];\n      }\n    }\n    setFitnessEntries(updatedEntries.sort((a, b) => new Date(b.date) - new Date(a.date)));\n    resetForm();\n    setCurrentTab(3); // Go to Progress tab after adding/updating\n    setIsFilteredViewActive(false); // Show all entries when navigating to progress after submission\n  };\n  const resetForm = useCallback(() => {\n    setTrackDate(getTodayDate());\n    setWeight('');\n    setHeightCm('');\n    setHeightFeet('');\n    setHeightInches('');\n    setWorkoutSplit([]);\n    setPainLevel('');\n    setNotes('');\n    setFormSupplements(customSupplements.map(name => ({\n      name,\n      taken: false,\n      quantity: ''\n    })));\n    setCurrentEditingIndex(-1);\n  }, [customSupplements]);\n  const handleEditEntry = useCallback(index => {\n    const entry = fitnessEntries[index];\n    setTrackDate(entry.date);\n    setWeight(convertWeight(entry.weight, 'kg', unitSystem === 'metric' ? 'kg' : 'lbs').toFixed(1));\n    if (unitSystem === 'metric') {\n      setHeightCm(entry.height ? entry.height.toFixed(1) : '');\n      setHeightFeet('');\n      setHeightInches('');\n    } else {\n      const convertedHeight = entry.height ? convertCmToDisplayHeight(entry.height, 'ft/in') : {\n        feet: '',\n        inches: ''\n      };\n      setHeightFeet(convertedHeight.feet);\n      setHeightInches(convertedHeight.inches.toFixed(1));\n      setHeightCm('');\n    }\n    setWorkoutSplit(entry.workoutSplit || []);\n    setPainLevel(entry.painLevel || '');\n    setNotes(entry.notes || '');\n\n    // Set form supplements based on entry's supplements combined with all custom ones\n    const updatedFormSupps = customSupplements.map(supName => {\n      const existingSup = (entry.supplements || []).find(s => s.name === supName);\n      return existingSup || {\n        name: supName,\n        taken: false,\n        quantity: ''\n      };\n    });\n    setFormSupplements(updatedFormSupps);\n    setCurrentEditingIndex(index);\n    setCurrentTab(0); // Switch to Entry Form tab\n  }, [fitnessEntries, unitSystem, customSupplements]);\n  const handleDeleteEntry = useCallback(index => {\n    setEntryToDeleteIndex(index);\n    setIsConfirmDeleteEntryOpen(true);\n  }, []);\n  const confirmDeleteEntry = () => {\n    const updatedEntries = fitnessEntries.filter((_, i) => i !== entryToDeleteIndex);\n    setFitnessEntries(updatedEntries);\n    setIsConfirmDeleteEntryOpen(false);\n    setEntryToDeleteIndex(null);\n    if (currentEditingIndex === entryToDeleteIndex) {\n      resetForm();\n    } else if (currentEditingIndex > entryToDeleteIndex) {\n      setCurrentEditingIndex(prev => prev - 1);\n    }\n  };\n  const cancelDeleteEntry = () => {\n    setIsConfirmDeleteEntryOpen(false);\n    setEntryToDeleteIndex(null);\n  };\n  const handleClearAllData = () => {\n    setIsConfirmClearOpen(true);\n  };\n  const confirmClearAllData = () => {\n    setFitnessEntries([]);\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n    resetForm();\n    setFilterStartDate('');\n    setFilterEndDate('');\n    setFilterWorkout('');\n    setSortOrder('desc');\n    setIsFilteredViewActive(false);\n    setIsConfirmClearOpen(false);\n  };\n  const cancelClearAllData = () => {\n    setIsConfirmClearOpen(false);\n  };\n  const handleDownloadCsv = () => {\n    if (fitnessEntries.length === 0) {\n      alert(\"No data to download!\");\n      return;\n    }\n    const baseHeaders = [\"Date\", \"Weight (kg)\", \"Height (cm)\", \"BMI\", \"Workout Split\", \"Pain Level\", \"Notes\"];\n    const supplementHeaders = customSupplements.flatMap(name => [`${name} (Taken)`, `${name} (Quantity)`]);\n    let csvContent = [...baseHeaders, ...supplementHeaders].join(\",\") + \"\\n\";\n    fitnessEntries.forEach(entry => {\n      const weightInKg = entry.weight.toFixed(1);\n      const heightInCm = entry.height ? entry.height.toFixed(1) : '';\n      const bmi = calculateBMI(entry.weight, entry.height);\n      const workoutSplitCsv = `\"${(Array.isArray(entry.workoutSplit) ? entry.workoutSplit : [entry.workoutSplit]).map(s => s.replace(/\"/g, '\"\"')).join(', ')}\"`;\n      const painLevelCsv = `\"${entry.painLevel.replace(/\"/g, '\"\"')}\"`;\n      const notesCsv = entry.notes ? `\"${entry.notes.replace(/\"/g, '\"\"')}\"` : '';\n      const row = [entry.date, weightInKg, heightInCm, bmi !== null ? bmi : '', workoutSplitCsv, painLevelCsv, notesCsv];\n      const supplementValues = customSupplements.flatMap(supName => {\n        const sup = (entry.supplements || []).find(s => s.name === supName);\n        return [sup && sup.taken ? 'Yes' : 'No', sup && sup.taken && sup.quantity ? `\"${sup.quantity.replace(/\"/g, '\"\"')}\"` : ''];\n      });\n      csvContent += [...row, ...supplementValues].join(\",\") + \"\\n\";\n    });\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', 'fitness_tracker.csv');\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      // Consider a custom modal for this alert in a Material UI app\n      window.alert(\"Your browser does not support downloading files directly. Please copy the data manually.\");\n    }\n  };\n\n  // --- Summary Statistics Calculation ---\n  const calculateStatistics = useCallback(() => {\n    if (fitnessEntries.length === 0) {\n      return {\n        totalEntries: 0,\n        avgWeight: 'N/A',\n        avgBMI: 'N/A',\n        mostFrequentWorkout: 'N/A',\n        avgPainLevel: 'N/A',\n        supplementFrequencies: {}\n      };\n    }\n    const currentWeightUnit = unitSystem === 'metric' ? 'kg' : 'lbs';\n    const totalWeight = fitnessEntries.reduce((sum, entry) => {\n      return sum + convertWeight(entry.weight, 'kg', currentWeightUnit);\n    }, 0);\n    const avgWeight = `${(totalWeight / fitnessEntries.length).toFixed(1)} ${currentWeightUnit}`;\n    let totalBMI = 0;\n    let bmiCount = 0;\n    fitnessEntries.forEach(entry => {\n      const bmi = calculateBMI(entry.weight, entry.height);\n      if (bmi !== null) {\n        totalBMI += parseFloat(bmi);\n        bmiCount++;\n      }\n    });\n    const avgBMI = bmiCount > 0 ? (totalBMI / bmiCount).toFixed(2) : 'N/A';\n    const workoutCounts = {};\n    fitnessEntries.forEach(entry => {\n      (Array.isArray(entry.workoutSplit) ? entry.workoutSplit : [entry.workoutSplit]).forEach(split => {\n        workoutCounts[split] = (workoutCounts[split] || 0) + 1;\n      });\n    });\n    let mostFrequentWorkout = 'N/A';\n    let maxCount = 0;\n    for (const split in workoutCounts) {\n      if (workoutCounts[split] > maxCount) {\n        maxCount = workoutCounts[split];\n        mostFrequentWorkout = split;\n      }\n    }\n\n    // FIX: Corrected syntax for totalPain calculation\n    const totalPain = fitnessEntries.reduce((sum, entry) => {\n      const painValue = parseInt(entry.painLevel.split(' ')[0]);\n      return sum + (isNaN(painValue) ? 0 : painValue);\n    }, 0);\n    const avgPainLevel = `${(totalPain / fitnessEntries.length).toFixed(1)}`;\n    const supplementCounts = {};\n    customSupplements.forEach(supName => supplementCounts[supName] = 0);\n    fitnessEntries.forEach(entry => {\n      (entry.supplements || []).forEach(sup => {\n        if (sup.taken && supplementCounts.hasOwnProperty(sup.name)) {\n          supplementCounts[sup.name]++;\n        }\n      });\n    });\n    const supplementFrequencies = {};\n    for (const supName in supplementCounts) {\n      const freq = (supplementCounts[supName] / fitnessEntries.length * 100).toFixed(0);\n      supplementFrequencies[supName] = `${freq}%`;\n    }\n    return {\n      totalEntries: fitnessEntries.length,\n      avgWeight,\n      avgBMI,\n      mostFrequentWorkout,\n      avgPainLevel,\n      supplementFrequencies\n    };\n  }, [fitnessEntries, customSupplements, unitSystem]);\n  const stats = calculateStatistics();\n\n  // --- Filtered and Sorted Entries for Progress Tab ---\n  const filteredAndSortedEntries = useCallback(() => {\n    let entriesToRender = fitnessEntries;\n    if (isFilteredViewActive) {\n      entriesToRender = fitnessEntries.filter(entry => {\n        const entryDate = new Date(entry.date);\n        entryDate.setHours(0, 0, 0, 0); // Normalize to start of day\n\n        const startDateInput = filterStartDate;\n        const endDateInput = filterEndDate;\n        const workoutFilter = filterWorkout;\n        let dateMatch = true;\n        if (startDateInput) {\n          const startDate = new Date(startDateInput);\n          startDate.setHours(0, 0, 0, 0);\n          if (entryDate < startDate) dateMatch = false;\n        }\n        if (endDateInput) {\n          const endDate = new Date(endDateInput);\n          endDate.setHours(0, 0, 0, 0);\n          endDate.setDate(endDate.getDate() + 1); // Exclusive of next day\n          if (entryDate >= endDate) dateMatch = false;\n        }\n        let workoutMatch = true;\n        if (workoutFilter && !entry.workoutSplit.includes(workoutFilter)) workoutMatch = false;\n        return dateMatch && workoutMatch;\n      });\n    }\n    return [...entriesToRender].sort((a, b) => {\n      const dateA = new Date(a.date);\n      const dateB = new Date(b.date);\n      return sortOrder === 'desc' ? dateB - dateA : dateA - dateB;\n    });\n  }, [fitnessEntries, isFilteredViewActive, filterStartDate, filterEndDate, filterWorkout, sortOrder]);\n  const entriesToDisplay = filteredAndSortedEntries();\n\n  // --- Supplement Management Handlers ---\n  const handleAddSupplement = () => {\n    const name = newSupplementName.trim();\n    if (name && !customSupplements.includes(name)) {\n      setCustomSupplements(prev => [...prev, name]);\n      setNewSupplementName('');\n    } else if (name) {\n      alert('This supplement name already exists!');\n    }\n  };\n  const handleDeleteCustomSupplement = nameToDelete => {\n    if (window.confirm(`Are you sure you want to remove \"${nameToDelete}\" from your custom supplements? This will not remove it from existing entries.`)) {\n      setCustomSupplements(prev => prev.filter(name => name !== nameToDelete));\n    }\n  };\n  const handleSupplementCheckboxChange = (name, checked) => {\n    setFormSupplements(prev => prev.map(sup => sup.name === name ? {\n      ...sup,\n      taken: checked\n    } : sup));\n  };\n  const handleSupplementQuantityChange = (name, quantity) => {\n    setFormSupplements(prev => prev.map(sup => sup.name === name ? {\n      ...sup,\n      quantity: quantity\n    } : sup));\n  };\n\n  // --- Gemini API Integration for Fitness Insights ---\n  const fetchFitnessInsight = async () => {\n    if (fitnessEntries.length === 0) {\n      alert(\"Please add some fitness entries to get insights!\");\n      return;\n    }\n    setIsLlmLoading(true);\n    setLlmInsight('');\n    setIsInsightDialogOpen(true);\n    const prompt = `\n      Analyze the following fitness data and provide a concise summary of progress, identify any noticeable trends (positive or negative), and suggest general areas for focus or improvement based on this data. Keep the response encouraging and actionable.\n\n      User's unit system: ${unitSystem}\n\n      Fitness Entries:\n      ${fitnessEntries.map(entry => {\n      const displayWeight = convertWeight(entry.weight, 'kg', unitSystem === 'metric' ? 'kg' : 'lbs').toFixed(1);\n      let displayHeight = '';\n      if (unitSystem === 'metric') {\n        displayHeight = entry.height ? `${entry.height.toFixed(1)} cm` : 'N/A';\n      } else {\n        const convertedHeight = entry.height ? convertCmToDisplayHeight(entry.height, 'ft/in') : {\n          feet: '',\n          inches: ''\n        };\n        displayHeight = entry.height ? `${convertedHeight.feet}' ${convertedHeight.inches.toFixed(1)}''` : 'N/A';\n      }\n      const workoutSplitDisplay = Array.isArray(entry.workoutSplit) ? entry.workoutSplit.join(', ') : entry.workoutSplit;\n      const supplementsDisplay = (entry.supplements || []).filter(s => s.taken).map(s => s.quantity ? `${s.name} (${s.quantity})` : s.name).join(', ') || 'None';\n      return `Date: ${entry.date}, Weight: ${displayWeight} ${unitSystem === 'metric' ? 'kg' : 'lbs'}, Height: ${displayHeight}, Workout: ${workoutSplitDisplay}, Pain Level: ${entry.painLevel}, Supplements: ${supplementsDisplay}, Notes: ${entry.notes || 'None'}`;\n    }).join('\\n')}\n\n      Overall Statistics:\n      Total Entries: ${stats.totalEntries}\n      Average Weight: ${stats.avgWeight}\n      Average BMI: ${stats.avgBMI}\n      Most Frequent Workout: ${stats.mostFrequentWorkout}\n      Average Pain Level: ${stats.avgPainLevel}\n      Supplement Frequencies: ${Object.entries(stats.supplementFrequencies).map(([name, freq]) => `${name}: ${freq}`).join(', ')}\n\n      Provide the analysis in a friendly tone.\n    `;\n    try {\n      let chatHistory = [];\n      chatHistory.push({\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      });\n      const payload = {\n        contents: chatHistory\n      };\n      const apiKey = \"\"; // If you want to use models other than gemini-2.0-flash or imagen-3.0-generate-002, provide an API key here. Otherwise, leave this as-is.\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        setLlmInsight(result.candidates[0].content.parts[0].text);\n      } else {\n        console.error(\"Unexpected response structure from Gemini API:\", result);\n        setLlmInsight(\"Sorry, I couldn't generate insights at this moment. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching fitness insight from Gemini API:\", error);\n      setLlmInsight(\"There was an error connecting to the insight service. Please check your network connection or try again later.\");\n    } finally {\n      setIsLlmLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundImage: 'repeating-linear-gradient(45deg, #2d3748 0, #2d3748 1px, transparent 1px, transparent 20px)',\n        // Darker background pattern\n        backgroundSize: '20px 20px',\n        opacity: 1,\n        zIndex: -1,\n        backgroundColor: darkTheme.palette.background.default // Ensure body background matches theme\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        my: 4,\n        p: 4,\n        borderRadius: '10px'\n      },\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            value: unitSystem,\n            onChange: handleUnitSystemChange,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"metric\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 63\n              }, this),\n              label: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"imperial\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 65\n              }, this),\n              label: \"Imperial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        align: \"center\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Daily Fitness Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"transparent\",\n        elevation: 0,\n        sx: {\n          borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: currentTab,\n          onChange: handleTabChange,\n          \"aria-label\": \"fitness tracker tabs\",\n          centered: true,\n          TabIndicatorProps: {\n            style: {\n              backgroundColor: darkTheme.palette.primary.main\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Entry Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Filter & Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this), currentTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Date\",\n              type: \"date\",\n              fullWidth: true,\n              required: true,\n              value: trackDate,\n              onChange: e => setTrackDate(e.target.value),\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: `Weight (${unitSystem === 'metric' ? 'kg' : 'lbs'})`,\n              type: \"number\",\n              step: \"0.1\",\n              fullWidth: true,\n              required: true,\n              value: weight,\n              onChange: e => setWeight(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: unitSystem === 'metric' ? /*#__PURE__*/_jsxDEV(TextField, {\n              label: `Height (cm)`,\n              type: \"number\",\n              step: \"0.1\",\n              fullWidth: true,\n              required: true,\n              value: heightCm,\n              onChange: e => setHeightCm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Height (ft)\",\n                  type: \"number\",\n                  step: \"1\",\n                  fullWidth: true,\n                  required: true,\n                  value: heightFeet,\n                  onChange: e => setHeightFeet(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Height (in)\",\n                  type: \"number\",\n                  step: \"0.1\",\n                  fullWidth: true,\n                  required: true,\n                  value: heightInches,\n                  onChange: e => setHeightInches(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 937,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"workout-split-label\",\n                children: \"Workout Split\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"workout-split-label\",\n                multiple: true,\n                value: workoutSplit,\n                onChange: e => setWorkoutSplit(e.target.value),\n                renderValue: selected => selected.join(', '),\n                label: \"Workout Split\",\n                sx: {\n                  // Increased height and padding for better visibility and touch target\n                  minHeight: '56px',\n                  // Standard TextField height\n                  '.MuiSelect-select': {\n                    paddingTop: '16.5px',\n                    paddingBottom: '16.5px'\n                  }\n                },\n                children: workoutSplits.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option,\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: workoutSplit.indexOf(option) > -1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 973,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 25\n                  }, this)]\n                }, option, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"pain-level-label\",\n                children: \"Pain Level (1-10)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"pain-level-label\",\n                value: painLevel,\n                onChange: e => setPainLevel(e.target.value),\n                label: \"Pain Level (1-10)\",\n                sx: {\n                  // Increased height and padding for better visibility and touch target\n                  minHeight: '56px',\n                  // Standard TextField height\n                  '.MuiSelect-select': {\n                    paddingTop: '16.5px',\n                    paddingBottom: '16.5px'\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"Select Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 997,\n                  columnNumber: 21\n                }, this), painLevels.map(level => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: level,\n                  children: level\n                }, level, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 999,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Notes\",\n              multiline: true,\n              rows: 3,\n              fullWidth: true,\n              value: notes,\n              onChange: e => setNotes(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 1,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  color: 'text.secondary'\n                },\n                children: \"Supplements:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                sx: {\n                  backgroundColor: 'rgba(106, 115, 125, 0.5)',\n                  '&:hover': {\n                    backgroundColor: 'rgba(84, 92, 100, 0.7)'\n                  }\n                },\n                onClick: () => setIsManageSupplementsOpen(true),\n                children: \"Manage Supplements\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: formSupplements.map((sup, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: sup.taken,\n                      onChange: e => handleSupplementCheckboxChange(sup.name, e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1035,\n                      columnNumber: 29\n                    }, this),\n                    label: /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        color: 'text.secondary'\n                      },\n                      children: sup.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1040,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1033,\n                    columnNumber: 25\n                  }, this), sup.taken && /*#__PURE__*/_jsxDEV(TextField, {\n                    size: \"small\",\n                    placeholder: \"Quantity\",\n                    value: sup.quantity,\n                    onChange: e => handleSupplementQuantityChange(sup.name, e.target.value),\n                    sx: {\n                      ml: 1,\n                      flexGrow: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1043,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1032,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            gap: 2,\n            children: [currentEditingIndex > -1 && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: resetForm,\n              children: \"Cancel Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              children: currentEditingIndex > -1 ? 'Update Entry' : 'Add Entry'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 11\n      }, this), currentTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          p: 4\n        },\n        component: Paper,\n        elevation: 0,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Summary Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Entries:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 45\n              }, this), \" \", stats.totalEntries]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Average Weight:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1080,\n                columnNumber: 45\n              }, this), \" \", stats.avgWeight]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Average BMI:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 45\n              }, this), \" \", stats.avgBMI]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Most Frequent Workout:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 45\n              }, this), \" \", stats.mostFrequentWorkout]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Avg Pain Level:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1089,\n                columnNumber: 45\n              }, this), \" \", stats.avgPainLevel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 15\n          }, this), Object.entries(stats.supplementFrequencies).map(([name, freq]) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [name, \" Taken:\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 47\n              }, this), \" \", freq]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 19\n            }, this)\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: fetchFitnessInsight,\n            startIcon: /*#__PURE__*/_jsxDEV(PsychologyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 28\n            }, this),\n            disabled: isLlmLoading || fitnessEntries.length === 0,\n            children: isLlmLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24,\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 33\n            }, this) : 'Get Fitness Insights ✨'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 11\n      }, this), currentTab === 2 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          p: 4\n        },\n        component: Paper,\n        elevation: 0,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Filter & Sort Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Start Date\",\n              type: \"date\",\n              fullWidth: true,\n              value: filterStartDate,\n              onChange: e => setFilterStartDate(e.target.value),\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"End Date\",\n              type: \"date\",\n              fullWidth: true,\n              value: filterEndDate,\n              onChange: e => setFilterEndDate(e.target.value),\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"filter-workout-label\",\n                children: \"Filter Workout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"filter-workout-label\",\n                value: filterWorkout,\n                onChange: e => setFilterWorkout(e.target.value),\n                label: \"Filter Workout\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"All Workouts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1144,\n                  columnNumber: 21\n                }, this), workoutSplits.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option,\n                  children: option\n                }, option, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1146,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => {\n                setIsFilteredViewActive(true);\n                setCurrentTab(3);\n              },\n              children: \"Apply Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => {\n                setFilterStartDate('');\n                setFilterEndDate('');\n                setFilterWorkout('');\n                setSortOrder('desc');\n                setIsFilteredViewActive(false);\n                setCurrentTab(3);\n              },\n              children: \"Clear Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"sort-order-label\",\n                children: \"Sort By Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"sort-order-label\",\n                value: sortOrder,\n                onChange: e => setSortOrder(e.target.value),\n                label: \"Sort By Date\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"desc\",\n                  children: \"Newest First\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"asc\",\n                  children: \"Oldest First\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1176,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 11\n      }, this), currentTab === 3 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Your Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 13\n        }, this), entriesToDisplay.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          sx: {\n            color: 'text.disabled',\n            mt: 3\n          },\n          children: \"No entries yet. Add one above!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            '& > div': {\n              mb: 2,\n              p: 2,\n              borderRadius: '10px'\n            },\n            mt: 3\n          },\n          children: entriesToDisplay.map((entry, index) => {\n            const displayWeight = convertWeight(entry.weight, 'kg', unitSystem === 'metric' ? 'kg' : 'lbs').toFixed(1);\n            let displayHeight = 'N/A';\n            if (entry.height) {\n              if (unitSystem === 'metric') {\n                displayHeight = `${entry.height.toFixed(1)} cm`;\n              } else {\n                const convertedHeight = convertCmToDisplayHeight(entry.height, 'ft/in');\n                displayHeight = `${convertedHeight.feet}' ${convertedHeight.inches.toFixed(1)}''`;\n              }\n            }\n            const bmi = calculateBMI(entry.weight, entry.height);\n            const workoutSplitDisplay = Array.isArray(entry.workoutSplit) ? entry.workoutSplit.join(', ') : entry.workoutSplit;\n            let supplementsDisplay = 'None';\n            if (entry.supplements && entry.supplements.length > 0) {\n              const takenSupplements = entry.supplements.filter(s => s.taken);\n              if (takenSupplements.length > 0) {\n                supplementsDisplay = takenSupplements.map(s => {\n                  return s.quantity ? `${s.name} (${s.quantity})` : s.name;\n                }).join(', ');\n              }\n            }\n            return /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"flex-start\",\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: entry.date\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1223,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: 'text.disabled'\n                      },\n                      children: [\"Weight: \", displayWeight, \" \", unitSystem === 'metric' ? 'kg' : 'lbs']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1224,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1222,\n                    columnNumber: 29\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      display: \"block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Height:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1232,\n                        columnNumber: 33\n                      }, this), \" \", displayHeight]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1231,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      display: \"block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"BMI:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1235,\n                        columnNumber: 33\n                      }, this), \" \", bmi !== null ? bmi : 'N/A']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1234,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      display: \"block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Workout:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1238,\n                        columnNumber: 33\n                      }, this), \" \", workoutSplitDisplay]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1237,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      display: \"block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Pain Level:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1241,\n                        columnNumber: 33\n                      }, this), \" \", entry.painLevel]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1240,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      display: \"block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Supplements:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1244,\n                        columnNumber: 33\n                      }, this), \" \", supplementsDisplay]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1243,\n                      columnNumber: 31\n                    }, this), entry.notes && /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      display: \"block\",\n                      sx: {\n                        whiteSpace: 'pre-wrap'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Notes:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1248,\n                        columnNumber: 35\n                      }, this), \" \", entry.notes]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1247,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1230,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"edit\",\n                    onClick: () => handleEditEntry(index),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1256,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1255,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"delete\",\n                    onClick: () => handleDeleteEntry(index),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1259,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1258,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1254,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1219,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: 2,\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            onClick: handleDownloadCsv,\n            children: \"Download as CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"error\",\n            onClick: handleClearAllData,\n            children: \"Clear All Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: isManageSupplementsOpen,\n        onClose: () => setIsManageSupplementsOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Manage Custom Supplements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            gap: 1,\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\",\n              label: \"New supplement name\",\n              fullWidth: true,\n              value: newSupplementName,\n              onChange: e => setNewSupplementName(e.target.value),\n              onKeyPress: e => {\n                if (e.key === 'Enter') {\n                  handleAddSupplement();\n                  e.preventDefault();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleAddSupplement,\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1293,\n                columnNumber: 100\n              }, this),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: customSupplements.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              align: \"center\",\n              sx: {\n                color: 'text.disabled',\n                mt: 2\n              },\n              children: \"No custom supplements added yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1299,\n              columnNumber: 17\n            }, this) : customSupplements.map((name, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                bgcolor: 'background.default',\n                mb: 1,\n                borderRadius: '4px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1305,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  onClick: () => handleDeleteCustomSupplement(name),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1308,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1307,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1306,\n                columnNumber: 21\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setIsManageSupplementsOpen(false),\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1317,\n              columnNumber: 101\n            }, this),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: isConfirmClearOpen,\n        onClose: cancelClearAllData,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: \"Confirm Clear All Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-description\",\n            children: \"Are you sure you want to delete ALL your fitness data? This action cannot be undone.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: cancelClearAllData,\n            color: \"secondary\",\n            autoFocus: true,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: confirmClearAllData,\n            color: \"error\",\n            children: \"Delete All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: isConfirmDeleteEntryOpen,\n        onClose: cancelDeleteEntry,\n        \"aria-labelledby\": \"delete-entry-dialog-title\",\n        \"aria-describedby\": \"delete-entry-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"delete-entry-dialog-title\",\n          children: \"Confirm Delete Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"delete-entry-dialog-description\",\n            children: \"Are you sure you want to delete this entry? This action cannot be undone.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: cancelDeleteEntry,\n            color: \"secondary\",\n            autoFocus: true,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: confirmDeleteEntry,\n            color: \"error\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: isInsightDialogOpen,\n        onClose: () => setIsInsightDialogOpen(false),\n        fullWidth: true,\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Fitness Insights from Gemini \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          children: isLlmLoading ? /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            minHeight: \"150px\",\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                ml: 2\n              },\n              children: \"Generating insights...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1381,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1379,\n            columnNumber: 15\n          }, this) : llmInsight ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: llmInsight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"error\",\n            children: \"Could not retrieve insights.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setIsInsightDialogOpen(false),\n            color: \"primary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1392,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 848,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U0y+ZOroEUklfkX8qZjukAZNFSo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CssBaseline","AppBar","Toolbar","Typography","Container","Box","Tab","Tabs","TextField","MenuItem","Button","FormControl","InputLabel","Select","Checkbox","FormControlLabel","FormGroup","Paper","Grid","RadioGroup","Radio","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","CircularProgress","createTheme","ThemeProvider","DeleteIcon","EditIcon","AddIcon","CloseIcon","PsychologyIcon","jsxDEV","_jsxDEV","darkTheme","palette","mode","primary","main","secondary","error","success","background","default","paper","text","disabled","typography","fontFamily","h4","fontWeight","h5","h6","components","MuiPaper","styleOverrides","root","backdropFilter","WebkitBackdropFilter","border","boxShadow","borderRadius","backgroundColor","MuiInputBase","color","borderColor","colorScheme","MuiInputLabel","MuiSelect","select","icon","MuiCheckbox","MuiRadio","MuiButton","textTransform","padding","containedPrimary","containedSuccess","containedError","containedSecondary","MuiTab","MuiDialog","backgroundImage","MuiDialogTitle","MuiDialogContentText","KG_TO_LBS_FACTOR","CM_TO_INCHES_FACTOR","INCHES_TO_CM_FACTOR","FEET_TO_CM_FACTOR","LOCAL_STORAGE_KEY","SYSTEM_UNIT_KEY","CUSTOM_SUPPLEMENTS_KEY","convertWeight","weight","fromUnit","toUnit","convertHeightToCm","heightValue","fromInches","convertCmToDisplayHeight","heightCm","totalInches","feet","Math","floor","inches","calculateBMI","weightKg","isNaN","heightM","toFixed","getTodayDate","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","workoutSplits","painLevels","App","_s","currentTab","setCurrentTab","fitnessEntries","setFitnessEntries","customSupplements","setCustomSupplements","unitSystem","setUnitSystem","currentEditingIndex","setCurrentEditingIndex","isFilteredViewActive","setIsFilteredViewActive","trackDate","setTrackDate","setWeight","setHeightCm","heightFeet","setHeightFeet","heightInches","setHeightInches","workoutSplit","setWorkoutSplit","painLevel","setPainLevel","notes","setNotes","formSupplements","setFormSupplements","filterStartDate","setFilterStartDate","filterEndDate","setFilterEndDate","filterWorkout","setFilterWorkout","sortOrder","setSortOrder","isManageSupplementsOpen","setIsManageSupplementsOpen","newSupplementName","setNewSupplementName","isConfirmClearOpen","setIsConfirmClearOpen","isConfirmDeleteEntryOpen","setIsConfirmDeleteEntryOpen","entryToDeleteIndex","setEntryToDeleteIndex","llmInsight","setLlmInsight","isLlmLoading","setIsLlmLoading","isInsightDialogOpen","setIsInsightDialogOpen","storedEntries","localStorage","getItem","parsedEntries","JSON","parse","sort","a","b","date","e","console","storedSupplements","savedSystem","map","name","taken","quantity","entry","updatedFormSupps","supName","existingSup","supplements","find","s","setItem","stringify","handleTabChange","event","newValue","handleUnitSystemChange","newSystem","target","value","handleSubmit","preventDefault","weightValue","parseFloat","alert","supplementsTaken","filter","newEntryData","height","updatedEntries","existingEntryIndex","findIndex","window","confirm","resetForm","handleEditEntry","index","convertedHeight","handleDeleteEntry","confirmDeleteEntry","_","i","prev","cancelDeleteEntry","handleClearAllData","confirmClearAllData","removeItem","cancelClearAllData","handleDownloadCsv","length","baseHeaders","supplementHeaders","flatMap","csvContent","join","forEach","weightInKg","heightInCm","bmi","workoutSplitCsv","Array","isArray","replace","painLevelCsv","notesCsv","row","supplementValues","sup","blob","Blob","type","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","calculateStatistics","totalEntries","avgWeight","avgBMI","mostFrequentWorkout","avgPainLevel","supplementFrequencies","currentWeightUnit","totalWeight","reduce","sum","totalBMI","bmiCount","workoutCounts","split","maxCount","totalPain","painValue","parseInt","supplementCounts","hasOwnProperty","freq","stats","filteredAndSortedEntries","entriesToRender","entryDate","setHours","startDateInput","endDateInput","workoutFilter","dateMatch","startDate","endDate","setDate","workoutMatch","includes","dateA","dateB","entriesToDisplay","handleAddSupplement","trim","handleDeleteCustomSupplement","nameToDelete","handleSupplementCheckboxChange","checked","handleSupplementQuantityChange","fetchFitnessInsight","prompt","displayWeight","displayHeight","workoutSplitDisplay","supplementsDisplay","Object","entries","chatHistory","push","role","parts","payload","contents","apiKey","apiUrl","response","fetch","method","headers","result","json","candidates","content","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","position","top","left","width","backgroundSize","opacity","zIndex","maxWidth","my","p","component","display","justifyContent","alignItems","mb","onChange","control","label","variant","align","gutterBottom","elevation","borderBottom","centered","TabIndicatorProps","onSubmit","mt","container","spacing","item","xs","sm","fullWidth","required","InputLabelProps","shrink","step","id","labelId","multiple","renderValue","selected","minHeight","paddingTop","paddingBottom","option","indexOf","level","multiline","rows","onClick","size","placeholder","ml","flexGrow","gap","md","startIcon","takenSupplements","Fragment","whiteSpace","edge","open","onClose","autoFocus","margin","onKeyPress","key","bgcolor","dividers","_c","$RefreshReg$"],"sources":["E:/FitnessTracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  Typography,\n  Container,\n  Box,\n  Tab,\n  Tabs,\n  TextField,\n  MenuItem,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  Paper,\n  Grid,\n  RadioGroup,\n  Radio,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  CircularProgress,\n} from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport PsychologyIcon from '@mui/icons-material/Psychology'; // For the Gemini API button\n\n// Define a dark theme for Material UI\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#007bff', // Standard Blue\n    },\n    secondary: {\n      main: '#B0C4DE', // LightSteelBlue\n    },\n    error: {\n      main: '#dc3545', // Standard Red for error buttons\n    },\n    success: {\n        main: '#28a745', // Standard Green for success buttons\n    },\n    background: {\n      default: '#1a202c', // Darker background for consistency\n      paper: 'rgba(26, 32, 44, 0.7)', // Slightly transparent dark blue-gray for cards/paper\n    },\n    text: {\n      primary: '#E6E6FA', // Lavender - Brighter\n      secondary: '#B0C4DE', // LightSteelBlue - Brighter\n      disabled: '#A9A9A9', // DarkGray - Brighter\n    },\n  },\n  typography: {\n    fontFamily: 'Inter, sans-serif',\n    h4: {\n        fontWeight: 600,\n    },\n    h5: {\n        fontWeight: 600,\n    },\n    h6: {\n        fontWeight: 600,\n    },\n  },\n  components: {\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          backdropFilter: 'blur(10px)',\n          WebkitBackdropFilter: 'blur(10px)',\n          border: '1px solid rgba(255, 255, 255, 0.1)',\n          boxShadow: '0 8px 32px 0 rgba(0, 0, 0, 0.57)', // Stronger shadow for depth\n          borderRadius: '10px',\n          backgroundColor: 'rgba(26, 32, 44, 0.7)', // Ensure paper uses consistent transparent dark background\n        },\n      },\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: {\n          backgroundColor: 'rgba(0, 0, 0, 0.4)', // Slightly more opaque dark background for inputs\n          color: '#E6E6FA', // Light text color\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'rgba(255, 255, 255, 0.3)', // Lighter border for visibility\n          },\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'rgba(255, 255, 255, 0.5)', // Even lighter on hover\n          },\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: '#58a6ff',\n          },\n          '& input[type=\"date\"]': {\n            colorScheme: 'dark', // Hint to the browser for dark mode calendar\n          },\n        },\n      },\n    },\n    MuiInputLabel: { // Style for input labels\n        styleOverrides: {\n            root: {\n                color: '#B0C4DE', // Lightsteelblue for labels\n                '&.Mui-focused': {\n                    color: '#58a6ff', // Focus color\n                },\n            },\n        },\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          backgroundColor: 'rgba(0, 0, 0, 0.4)', // Consistent input background\n          color: '#E6E6FA',\n        },\n        icon: {\n            color: '#E6E6FA', // Ensure dropdown arrow is visible\n        },\n      },\n    },\n    MuiCheckbox: {\n      styleOverrides: {\n        root: {\n          color: '#A9A9A9', // Light gray for unchecked state\n          '&.Mui-checked': {\n            color: '#007bff', // Accent color when checked\n          },\n        },\n      },\n    },\n    MuiRadio: {\n        styleOverrides: {\n            root: {\n                color: '#B0C4DE',\n                '&.Mui-checked': {\n                    color: '#007bff',\n                }\n            }\n        }\n    },\n    MuiButton: {\n        styleOverrides: {\n            root: {\n                borderRadius: '8px',\n                textTransform: 'none',\n                fontWeight: 'bold',\n                padding: '10px 20px', // More comfortable padding\n            },\n            containedPrimary: {\n                backgroundColor: '#007bff',\n                '&:hover': {\n                    backgroundColor: '#0056b3',\n                },\n            },\n            containedSuccess: {\n                backgroundColor: '#28a745',\n                '&:hover': {\n                    backgroundColor: '#1e7e34',\n                },\n            },\n            containedError: {\n                backgroundColor: '#dc3545',\n                '&:hover': {\n                    backgroundColor: '#c82333',\n                },\n            },\n            containedSecondary: {\n                backgroundColor: 'rgba(48, 54, 61, 0.6)', // Slightly darker secondary button\n                color: '#E6E6FA', // Primary text color for secondary buttons\n                '&:hover': {\n                    backgroundColor: 'rgba(48, 54, 61, 0.8)',\n                },\n            },\n        },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          color: '#B0C4DE', // Inactive tab text color\n          '&.Mui-selected': {\n            color: '#E6E6FA', // Active tab text color\n          },\n        },\n      },\n    },\n    MuiDialog: { // Style for dialogs\n        styleOverrides: {\n            paper: {\n                backgroundColor: '#2d3748', // Darker background for dialog content\n                backgroundImage: 'none', // Remove default Material UI diagonal lines\n            },\n        },\n    },\n    MuiDialogTitle: {\n        styleOverrides: {\n            root: {\n                color: '#E6E6FA', // Consistent title color\n            },\n        },\n    },\n    MuiDialogContentText: {\n        styleOverrides: {\n            root: {\n                color: '#B0C4DE', // Consistent text color\n            },\n        },\n    },\n  },\n});\n\n// Unit Conversion Constants\nconst KG_TO_LBS_FACTOR = 2.20462;\nconst CM_TO_INCHES_FACTOR = 0.393701;\nconst INCHES_TO_CM_FACTOR = 2.54;\nconst FEET_TO_CM_FACTOR = 30.48;\n\n// Local Storage Keys\nconst LOCAL_STORAGE_KEY = 'dailyFitnessTrackerData';\nconst SYSTEM_UNIT_KEY = 'unitSystem';\nconst CUSTOM_SUPPLEMENTS_KEY = 'customSupplements';\n\n// Helper Functions for Data Handling\nconst convertWeight = (weight, fromUnit, toUnit) => {\n  if (fromUnit === toUnit) return weight;\n  if (fromUnit === 'kg' && toUnit === 'lbs') return weight * KG_TO_LBS_FACTOR;\n  if (fromUnit === 'lbs' && toUnit === 'kg') return weight / KG_TO_LBS_FACTOR;\n  return weight;\n};\n\nconst convertHeightToCm = (heightValue, fromUnit, fromInches = 0) => {\n  if (fromUnit === 'cm') return heightValue;\n  if (fromUnit === 'inches') return heightValue * INCHES_TO_CM_FACTOR;\n  if (fromUnit === 'ft/in') {\n    return (heightValue * FEET_TO_CM_FACTOR) + (fromInches * INCHES_TO_CM_FACTOR);\n  }\n  return heightValue;\n};\n\nconst convertCmToDisplayHeight = (heightCm, toUnit) => {\n  if (toUnit === 'cm') return heightCm;\n  if (toUnit === 'inches') return heightCm * CM_TO_INCHES_FACTOR;\n  if (toUnit === 'ft/in') {\n    const totalInches = heightCm * CM_TO_INCHES_FACTOR;\n    const feet = Math.floor(totalInches / 12);\n    const inches = (totalInches % 12);\n    return { feet: feet, inches: inches };\n  }\n  return heightCm;\n};\n\nconst calculateBMI = (weightKg, heightCm) => {\n  if (weightKg === null || isNaN(weightKg) || heightCm === null || isNaN(heightCm) || heightCm <= 0) {\n    return null;\n  }\n  const heightM = heightCm / 100;\n  return (weightKg / (heightM * heightM)).toFixed(2);\n};\n\nconst getTodayDate = () => {\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = String(today.getMonth() + 1).padStart(2, '0');\n  const day = String(today.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst workoutSplits = [\n  'Chest', 'Biceps', 'Back', 'Triceps', 'Shoulder', 'Traps', 'Forearms', 'Abs', 'Legs', 'Cardio', 'Rest Day', 'Other'\n];\n\nconst painLevels = [\n  '1 - None', '2 - Very Mild', '3 - Mild', '4 - Moderate', '5 - Annoying',\n  '6 - Distracting', '7 - Severe', '8 - Very Severe', '9 - Excruciating', '10 - Unbearable'\n];\n\nfunction App() {\n  const [currentTab, setCurrentTab] = useState(0); // 0: Entry Form, 1: Summary, 2: Filter, 3: Progress\n  const [fitnessEntries, setFitnessEntries] = useState([]);\n  const [customSupplements, setCustomSupplements] = useState([]);\n  const [unitSystem, setUnitSystem] = useState('metric');\n  const [currentEditingIndex, setCurrentEditingIndex] = useState(-1);\n  const [isFilteredViewActive, setIsFilteredViewActive] = useState(false);\n\n  // Form State\n  const [trackDate, setTrackDate] = useState(getTodayDate());\n  const [weight, setWeight] = useState('');\n  const [heightCm, setHeightCm] = useState('');\n  const [heightFeet, setHeightFeet] = useState('');\n  const [heightInches, setHeightInches] = useState('');\n  const [workoutSplit, setWorkoutSplit] = useState([]);\n  const [painLevel, setPainLevel] = useState('');\n  const [notes, setNotes] = useState('');\n  const [formSupplements, setFormSupplements] = useState([]); // State for supplements in the form\n\n  // Filter State\n  const [filterStartDate, setFilterStartDate] = useState('');\n  const [filterEndDate, setFilterEndDate] = useState('');\n  const [filterWorkout, setFilterWorkout] = useState('');\n  const [sortOrder, setSortOrder] = useState('desc');\n\n  // Supplement Management Dialog State\n  const [isManageSupplementsOpen, setIsManageSupplementsOpen] = useState(false);\n  const [newSupplementName, setNewSupplementName] = useState('');\n  const [isConfirmClearOpen, setIsConfirmClearOpen] = useState(false);\n  const [isConfirmDeleteEntryOpen, setIsConfirmDeleteEntryOpen] = useState(false);\n  const [entryToDeleteIndex, setEntryToDeleteIndex] = useState(null);\n\n  // LLM Integration State\n  const [llmInsight, setLlmInsight] = useState('');\n  const [isLlmLoading, setIsLlmLoading] = useState(false);\n  const [isInsightDialogOpen, setIsInsightDialogOpen] = useState(false);\n\n\n  // Load data from localStorage on initial render\n  useEffect(() => {\n    const storedEntries = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (storedEntries) {\n      try {\n        const parsedEntries = JSON.parse(storedEntries);\n        setFitnessEntries(parsedEntries.sort((a, b) => new Date(b.date) - new Date(a.date)));\n      } catch (e) {\n        console.error(\"Error parsing stored data from localStorage:\", e);\n        setFitnessEntries([]);\n      }\n    }\n\n    const storedSupplements = localStorage.getItem(CUSTOM_SUPPLEMENTS_KEY);\n    if (storedSupplements) {\n      try {\n        setCustomSupplements(JSON.parse(storedSupplements));\n      } catch (e) {\n        console.error(\"Error parsing custom supplements from localStorage:\", e);\n        setCustomSupplements(['Protein', 'Creatine', 'EAA']); // Fallback\n      }\n    } else {\n      setCustomSupplements(['Protein', 'Creatine', 'EAA']);\n    }\n\n    const savedSystem = localStorage.getItem(SYSTEM_UNIT_KEY) || 'metric';\n    setUnitSystem(savedSystem);\n  }, []);\n\n  // Effect to update formSupplements when customSupplements change\n  useEffect(() => {\n    if (currentEditingIndex === -1) {\n        setFormSupplements(customSupplements.map(name => ({ name, taken: false, quantity: '' })));\n    } else {\n        const entry = fitnessEntries[currentEditingIndex];\n        const updatedFormSupps = customSupplements.map(supName => {\n            const existingSup = (entry.supplements || []).find(s => s.name === supName);\n            return existingSup || { name: supName, taken: false, quantity: '' };\n        });\n        setFormSupplements(updatedFormSupps);\n    }\n  }, [customSupplements, unitSystem, currentEditingIndex, fitnessEntries]);\n\n  // Save data to localStorage whenever fitnessEntries or customSupplements change\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(fitnessEntries));\n  }, [fitnessEntries]);\n\n  useEffect(() => {\n    localStorage.setItem(CUSTOM_SUPPLEMENTS_KEY, JSON.stringify(customSupplements));\n  }, [customSupplements]);\n\n  // Handle Tab Change\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n    if (newValue === 3) { // Progress tab\n      setFilterStartDate('');\n      setFilterEndDate('');\n      setFilterWorkout('');\n      setSortOrder('desc');\n      setIsFilteredViewActive(false);\n    }\n  };\n\n  // Handle Unit System Change\n  const handleUnitSystemChange = (event) => {\n    const newSystem = event.target.value;\n    setUnitSystem(newSystem);\n    localStorage.setItem(SYSTEM_UNIT_KEY, newSystem);\n    setHeightCm('');\n    setHeightFeet('');\n    setHeightInches('');\n  };\n\n  // Form Submission Handler\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let weightValue = parseFloat(weight);\n    if (isNaN(weightValue)) {\n      alert('Please enter a valid weight.');\n      return;\n    }\n\n    if (unitSystem === 'imperial') {\n      weightValue = convertWeight(weightValue, 'lbs', 'kg');\n    }\n\n    let heightValue;\n    if (unitSystem === 'metric') {\n      heightValue = parseFloat(heightCm);\n      if (isNaN(heightValue) || heightValue <= 0) {\n        alert('Please enter a valid height in centimeters.');\n        return;\n      }\n    } else { // imperial\n      const feet = parseFloat(heightFeet);\n      const inches = parseFloat(heightInches);\n\n      if (isNaN(feet) || isNaN(inches)) {\n        alert('Please enter valid values for both feet and inches.');\n        return;\n      }\n      if ((feet === 0 && inches === 0) || (feet < 0 || inches < 0)) {\n        alert('Height must be a positive value.');\n        return;\n      }\n      heightValue = convertHeightToCm(feet, 'ft/in', inches);\n    }\n\n    const supplementsTaken = formSupplements.filter(s => s.taken);\n\n    const newEntryData = {\n      date: trackDate,\n      weight: weightValue, // Always stored in KG\n      height: heightValue, // Always stored in CM\n      workoutSplit: workoutSplit,\n      painLevel: painLevel,\n      notes: notes,\n      supplements: supplementsTaken,\n    };\n\n    let updatedEntries;\n    if (currentEditingIndex > -1) {\n      updatedEntries = [...fitnessEntries];\n      updatedEntries[currentEditingIndex] = newEntryData;\n      setCurrentEditingIndex(-1);\n    } else {\n      const existingEntryIndex = fitnessEntries.findIndex(entry => entry.date === newEntryData.date);\n      if (existingEntryIndex !== -1) {\n        if (window.confirm(`An entry for ${newEntryData.date} already exists. Do you want to update it?`)) {\n          updatedEntries = [...fitnessEntries];\n          updatedEntries[existingEntryIndex] = newEntryData;\n        } else {\n          return;\n        }\n      } else {\n        updatedEntries = [...fitnessEntries, newEntryData];\n      }\n    }\n\n    setFitnessEntries(updatedEntries.sort((a, b) => new Date(b.date) - new Date(a.date)));\n    resetForm();\n    setCurrentTab(3); // Go to Progress tab after adding/updating\n    setIsFilteredViewActive(false); // Show all entries when navigating to progress after submission\n  };\n\n  const resetForm = useCallback(() => {\n    setTrackDate(getTodayDate());\n    setWeight('');\n    setHeightCm('');\n    setHeightFeet('');\n    setHeightInches('');\n    setWorkoutSplit([]);\n    setPainLevel('');\n    setNotes('');\n    setFormSupplements(customSupplements.map(name => ({ name, taken: false, quantity: '' })));\n    setCurrentEditingIndex(-1);\n  }, [customSupplements]);\n\n  const handleEditEntry = useCallback((index) => {\n    const entry = fitnessEntries[index];\n    setTrackDate(entry.date);\n    setWeight(convertWeight(entry.weight, 'kg', unitSystem === 'metric' ? 'kg' : 'lbs').toFixed(1));\n\n    if (unitSystem === 'metric') {\n      setHeightCm(entry.height ? entry.height.toFixed(1) : '');\n      setHeightFeet('');\n      setHeightInches('');\n    } else {\n      const convertedHeight = entry.height ? convertCmToDisplayHeight(entry.height, 'ft/in') : { feet: '', inches: '' };\n      setHeightFeet(convertedHeight.feet);\n      setHeightInches(convertedHeight.inches.toFixed(1));\n      setHeightCm('');\n    }\n\n    setWorkoutSplit(entry.workoutSplit || []);\n    setPainLevel(entry.painLevel || '');\n    setNotes(entry.notes || '');\n\n    // Set form supplements based on entry's supplements combined with all custom ones\n    const updatedFormSupps = customSupplements.map(supName => {\n        const existingSup = (entry.supplements || []).find(s => s.name === supName);\n        return existingSup || { name: supName, taken: false, quantity: '' };\n    });\n    setFormSupplements(updatedFormSupps);\n\n    setCurrentEditingIndex(index);\n    setCurrentTab(0); // Switch to Entry Form tab\n  }, [fitnessEntries, unitSystem, customSupplements]);\n\n  const handleDeleteEntry = useCallback((index) => {\n    setEntryToDeleteIndex(index);\n    setIsConfirmDeleteEntryOpen(true);\n  }, []);\n\n  const confirmDeleteEntry = () => {\n    const updatedEntries = fitnessEntries.filter((_, i) => i !== entryToDeleteIndex);\n    setFitnessEntries(updatedEntries);\n    setIsConfirmDeleteEntryOpen(false);\n    setEntryToDeleteIndex(null);\n    if (currentEditingIndex === entryToDeleteIndex) {\n      resetForm();\n    } else if (currentEditingIndex > entryToDeleteIndex) {\n      setCurrentEditingIndex(prev => prev - 1);\n    }\n  };\n\n  const cancelDeleteEntry = () => {\n    setIsConfirmDeleteEntryOpen(false);\n    setEntryToDeleteIndex(null);\n  };\n\n  const handleClearAllData = () => {\n    setIsConfirmClearOpen(true);\n  };\n\n  const confirmClearAllData = () => {\n    setFitnessEntries([]);\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n    resetForm();\n    setFilterStartDate('');\n    setFilterEndDate('');\n    setFilterWorkout('');\n    setSortOrder('desc');\n    setIsFilteredViewActive(false);\n    setIsConfirmClearOpen(false);\n  };\n\n  const cancelClearAllData = () => {\n    setIsConfirmClearOpen(false);\n  };\n\n  const handleDownloadCsv = () => {\n    if (fitnessEntries.length === 0) {\n      alert(\"No data to download!\");\n      return;\n    }\n\n    const baseHeaders = [\"Date\", \"Weight (kg)\", \"Height (cm)\", \"BMI\", \"Workout Split\", \"Pain Level\", \"Notes\"];\n    const supplementHeaders = customSupplements\n      .flatMap(name => [`${name} (Taken)`, `${name} (Quantity)`]);\n    let csvContent = [...baseHeaders, ...supplementHeaders].join(\",\") + \"\\n\";\n\n    fitnessEntries.forEach(entry => {\n      const weightInKg = entry.weight.toFixed(1);\n      const heightInCm = entry.height ? entry.height.toFixed(1) : '';\n      const bmi = calculateBMI(entry.weight, entry.height);\n      const workoutSplitCsv = `\"${(Array.isArray(entry.workoutSplit) ? entry.workoutSplit : [entry.workoutSplit]).map(s => s.replace(/\"/g, '\"\"')).join(', ')}\"`;\n      const painLevelCsv = `\"${entry.painLevel.replace(/\"/g, '\"\"')}\"`;\n      const notesCsv = entry.notes ? `\"${entry.notes.replace(/\"/g, '\"\"')}\"` : '';\n\n      const row = [\n        entry.date,\n        weightInKg,\n        heightInCm,\n        bmi !== null ? bmi : '',\n        workoutSplitCsv,\n        painLevelCsv,\n        notesCsv\n      ];\n\n      const supplementValues = customSupplements.flatMap(supName => {\n        const sup = (entry.supplements || []).find(s => s.name === supName);\n        return [\n          sup && sup.taken ? 'Yes' : 'No',\n          sup && sup.taken && sup.quantity ? `\"${sup.quantity.replace(/\"/g, '\"\"')}\"` : ''\n        ];\n      });\n\n      csvContent += [...row, ...supplementValues].join(\",\") + \"\\n\";\n    });\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', 'fitness_tracker.csv');\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      // Consider a custom modal for this alert in a Material UI app\n      window.alert(\"Your browser does not support downloading files directly. Please copy the data manually.\");\n    }\n  };\n\n  // --- Summary Statistics Calculation ---\n  const calculateStatistics = useCallback(() => {\n    if (fitnessEntries.length === 0) {\n      return {\n        totalEntries: 0,\n        avgWeight: 'N/A',\n        avgBMI: 'N/A',\n        mostFrequentWorkout: 'N/A',\n        avgPainLevel: 'N/A',\n        supplementFrequencies: {},\n      };\n    }\n\n    const currentWeightUnit = unitSystem === 'metric' ? 'kg' : 'lbs';\n\n    const totalWeight = fitnessEntries.reduce((sum, entry) => {\n      return sum + convertWeight(entry.weight, 'kg', currentWeightUnit);\n    }, 0);\n    const avgWeight = `${(totalWeight / fitnessEntries.length).toFixed(1)} ${currentWeightUnit}`;\n\n    let totalBMI = 0;\n    let bmiCount = 0;\n    fitnessEntries.forEach(entry => {\n      const bmi = calculateBMI(entry.weight, entry.height);\n      if (bmi !== null) {\n        totalBMI += parseFloat(bmi);\n        bmiCount++;\n      }\n    });\n    const avgBMI = bmiCount > 0 ? (totalBMI / bmiCount).toFixed(2) : 'N/A';\n\n    const workoutCounts = {};\n    fitnessEntries.forEach(entry => {\n      (Array.isArray(entry.workoutSplit) ? entry.workoutSplit : [entry.workoutSplit]).forEach(split => {\n        workoutCounts[split] = (workoutCounts[split] || 0) + 1;\n      });\n    });\n    let mostFrequentWorkout = 'N/A';\n    let maxCount = 0;\n    for (const split in workoutCounts) {\n      if (workoutCounts[split] > maxCount) {\n        maxCount = workoutCounts[split];\n        mostFrequentWorkout = split;\n      }\n    }\n\n    // FIX: Corrected syntax for totalPain calculation\n    const totalPain = fitnessEntries.reduce((sum, entry) => {\n      const painValue = parseInt(entry.painLevel.split(' ')[0]);\n      return sum + (isNaN(painValue) ? 0 : painValue);\n    }, 0);\n    const avgPainLevel = `${(totalPain / fitnessEntries.length).toFixed(1)}`;\n\n    const supplementCounts = {};\n    customSupplements.forEach(supName => supplementCounts[supName] = 0);\n    fitnessEntries.forEach(entry => {\n      (entry.supplements || []).forEach(sup => {\n        if (sup.taken && supplementCounts.hasOwnProperty(sup.name)) {\n          supplementCounts[sup.name]++;\n        }\n      });\n    });\n\n    const supplementFrequencies = {};\n    for (const supName in supplementCounts) {\n      const freq = ((supplementCounts[supName] / fitnessEntries.length) * 100).toFixed(0);\n      supplementFrequencies[supName] = `${freq}%`;\n    }\n\n    return {\n      totalEntries: fitnessEntries.length,\n      avgWeight,\n      avgBMI,\n      mostFrequentWorkout,\n      avgPainLevel,\n      supplementFrequencies,\n    };\n  }, [fitnessEntries, customSupplements, unitSystem]);\n\n  const stats = calculateStatistics();\n\n  // --- Filtered and Sorted Entries for Progress Tab ---\n  const filteredAndSortedEntries = useCallback(() => {\n    let entriesToRender = fitnessEntries;\n\n    if (isFilteredViewActive) {\n      entriesToRender = fitnessEntries.filter(entry => {\n        const entryDate = new Date(entry.date);\n        entryDate.setHours(0, 0, 0, 0); // Normalize to start of day\n\n        const startDateInput = filterStartDate;\n        const endDateInput = filterEndDate;\n        const workoutFilter = filterWorkout;\n\n        let dateMatch = true;\n        if (startDateInput) {\n          const startDate = new Date(startDateInput);\n          startDate.setHours(0, 0, 0, 0);\n          if (entryDate < startDate) dateMatch = false;\n        }\n        if (endDateInput) {\n          const endDate = new Date(endDateInput);\n          endDate.setHours(0, 0, 0, 0);\n          endDate.setDate(endDate.getDate() + 1); // Exclusive of next day\n          if (entryDate >= endDate) dateMatch = false;\n        }\n\n        let workoutMatch = true;\n        if (workoutFilter && !entry.workoutSplit.includes(workoutFilter)) workoutMatch = false;\n\n        return dateMatch && workoutMatch;\n      });\n    }\n\n    return [...entriesToRender].sort((a, b) => {\n      const dateA = new Date(a.date);\n      const dateB = new Date(b.date);\n      return sortOrder === 'desc' ? dateB - dateA : dateA - dateB;\n    });\n  }, [fitnessEntries, isFilteredViewActive, filterStartDate, filterEndDate, filterWorkout, sortOrder]);\n\n  const entriesToDisplay = filteredAndSortedEntries();\n\n  // --- Supplement Management Handlers ---\n  const handleAddSupplement = () => {\n    const name = newSupplementName.trim();\n    if (name && !customSupplements.includes(name)) {\n      setCustomSupplements(prev => [...prev, name]);\n      setNewSupplementName('');\n    } else if (name) {\n      alert('This supplement name already exists!');\n    }\n  };\n\n  const handleDeleteCustomSupplement = (nameToDelete) => {\n    if (window.confirm(`Are you sure you want to remove \"${nameToDelete}\" from your custom supplements? This will not remove it from existing entries.`)) {\n      setCustomSupplements(prev => prev.filter(name => name !== nameToDelete));\n    }\n  };\n\n  const handleSupplementCheckboxChange = (name, checked) => {\n    setFormSupplements(prev =>\n      prev.map(sup =>\n        sup.name === name ? { ...sup, taken: checked } : sup\n      )\n    );\n  };\n\n  const handleSupplementQuantityChange = (name, quantity) => {\n    setFormSupplements(prev =>\n      prev.map(sup =>\n        sup.name === name ? { ...sup, quantity: quantity } : sup\n      )\n    );\n  };\n\n  // --- Gemini API Integration for Fitness Insights ---\n  const fetchFitnessInsight = async () => {\n    if (fitnessEntries.length === 0) {\n      alert(\"Please add some fitness entries to get insights!\");\n      return;\n    }\n\n    setIsLlmLoading(true);\n    setLlmInsight('');\n    setIsInsightDialogOpen(true);\n\n    const prompt = `\n      Analyze the following fitness data and provide a concise summary of progress, identify any noticeable trends (positive or negative), and suggest general areas for focus or improvement based on this data. Keep the response encouraging and actionable.\n\n      User's unit system: ${unitSystem}\n\n      Fitness Entries:\n      ${fitnessEntries.map(entry => {\n        const displayWeight = convertWeight(entry.weight, 'kg', unitSystem === 'metric' ? 'kg' : 'lbs').toFixed(1);\n        let displayHeight = '';\n        if (unitSystem === 'metric') {\n            displayHeight = entry.height ? `${entry.height.toFixed(1)} cm` : 'N/A';\n        } else {\n            const convertedHeight = entry.height ? convertCmToDisplayHeight(entry.height, 'ft/in') : { feet: '', inches: '' };\n            displayHeight = entry.height ? `${convertedHeight.feet}' ${convertedHeight.inches.toFixed(1)}''` : 'N/A';\n        }\n        const workoutSplitDisplay = Array.isArray(entry.workoutSplit) ? entry.workoutSplit.join(', ') : entry.workoutSplit;\n        const supplementsDisplay = (entry.supplements || []).filter(s => s.taken).map(s => s.quantity ? `${s.name} (${s.quantity})` : s.name).join(', ') || 'None';\n        return `Date: ${entry.date}, Weight: ${displayWeight} ${unitSystem === 'metric' ? 'kg' : 'lbs'}, Height: ${displayHeight}, Workout: ${workoutSplitDisplay}, Pain Level: ${entry.painLevel}, Supplements: ${supplementsDisplay}, Notes: ${entry.notes || 'None'}`;\n      }).join('\\n')}\n\n      Overall Statistics:\n      Total Entries: ${stats.totalEntries}\n      Average Weight: ${stats.avgWeight}\n      Average BMI: ${stats.avgBMI}\n      Most Frequent Workout: ${stats.mostFrequentWorkout}\n      Average Pain Level: ${stats.avgPainLevel}\n      Supplement Frequencies: ${Object.entries(stats.supplementFrequencies).map(([name, freq]) => `${name}: ${freq}`).join(', ')}\n\n      Provide the analysis in a friendly tone.\n    `;\n\n    try {\n        let chatHistory = [];\n        chatHistory.push({ role: \"user\", parts: [{ text: prompt }] });\n        const payload = { contents: chatHistory };\n        const apiKey = \"\"; // If you want to use models other than gemini-2.0-flash or imagen-3.0-generate-002, provide an API key here. Otherwise, leave this as-is.\n        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload)\n        });\n\n        const result = await response.json();\n\n        if (result.candidates && result.candidates.length > 0 &&\n            result.candidates[0].content && result.candidates[0].content.parts &&\n            result.candidates[0].content.parts.length > 0) {\n            setLlmInsight(result.candidates[0].content.parts[0].text);\n        } else {\n            console.error(\"Unexpected response structure from Gemini API:\", result);\n            setLlmInsight(\"Sorry, I couldn't generate insights at this moment. Please try again later.\");\n        }\n    } catch (error) {\n      console.error(\"Error fetching fitness insight from Gemini API:\", error);\n      setLlmInsight(\"There was an error connecting to the insight service. Please check your network connection or try again later.\");\n    } finally {\n      setIsLlmLoading(false);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <Box sx={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundImage: 'repeating-linear-gradient(45deg, #2d3748 0, #2d3748 1px, transparent 1px, transparent 20px)', // Darker background pattern\n        backgroundSize: '20px 20px',\n        opacity: 1,\n        zIndex: -1,\n        backgroundColor: darkTheme.palette.background.default, // Ensure body background matches theme\n      }} />\n      <Container maxWidth=\"md\" sx={{ my: 4, p: 4, borderRadius: '10px' }} component={Paper}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n            <FormControl component=\"fieldset\">\n                <RadioGroup row value={unitSystem} onChange={handleUnitSystemChange}>\n                    <FormControlLabel value=\"metric\" control={<Radio />} label=\"Metric\" />\n                    <FormControlLabel value=\"imperial\" control={<Radio />} label=\"Imperial\" />\n                </RadioGroup>\n            </FormControl>\n        </Box>\n        <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom sx={{ fontWeight: 'bold' }}>\n          Daily Fitness Tracker\n        </Typography>\n\n        <AppBar position=\"static\" color=\"transparent\" elevation={0} sx={{ borderBottom: '1px solid rgba(255, 255, 255, 0.1)', mb: 3 }}>\n          <Tabs value={currentTab} onChange={handleTabChange} aria-label=\"fitness tracker tabs\" centered\n            TabIndicatorProps={{ style: { backgroundColor: darkTheme.palette.primary.main } }}>\n            <Tab label=\"Entry Form\" />\n            <Tab label=\"Summary\" />\n            <Tab label=\"Filter & Sort\" />\n            <Tab label=\"Progress\" />\n          </Tabs>\n        </AppBar>\n\n        {/* Tab Content */}\n        {currentTab === 0 && (\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\n            <Grid container spacing={3}>\n              {/* Date, Weight, Height Fields */}\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  label=\"Date\"\n                  type=\"date\"\n                  fullWidth\n                  required\n                  value={trackDate}\n                  onChange={(e) => setTrackDate(e.target.value)}\n                  InputLabelProps={{ shrink: true }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  label={`Weight (${unitSystem === 'metric' ? 'kg' : 'lbs'})`}\n                  type=\"number\"\n                  step=\"0.1\"\n                  fullWidth\n                  required\n                  value={weight}\n                  onChange={(e) => setWeight(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                {unitSystem === 'metric' ? (\n                  <TextField\n                    label={`Height (cm)`}\n                    type=\"number\"\n                    step=\"0.1\"\n                    fullWidth\n                    required\n                    value={heightCm}\n                    onChange={(e) => setHeightCm(e.target.value)}\n                  />\n                ) : (\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      <TextField\n                        label=\"Height (ft)\"\n                        type=\"number\"\n                        step=\"1\"\n                        fullWidth\n                        required\n                        value={heightFeet}\n                        onChange={(e) => setHeightFeet(e.target.value)}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <TextField\n                        label=\"Height (in)\"\n                        type=\"number\"\n                        step=\"0.1\"\n                        fullWidth\n                        required\n                        value={heightInches}\n                        onChange={(e) => setHeightInches(e.target.value)}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n\n              {/* Workout Split and Pain Level - Now full width on ALL screens */}\n              <Grid item xs={12}>\n                <FormControl fullWidth required>\n                  <InputLabel id=\"workout-split-label\">Workout Split</InputLabel>\n                  <Select\n                    labelId=\"workout-split-label\"\n                    multiple\n                    value={workoutSplit}\n                    onChange={(e) => setWorkoutSplit(e.target.value)}\n                    renderValue={(selected) => selected.join(', ')}\n                    label=\"Workout Split\"\n                    sx={{\n                        // Increased height and padding for better visibility and touch target\n                        minHeight: '56px', // Standard TextField height\n                        '.MuiSelect-select': {\n                            paddingTop: '16.5px',\n                            paddingBottom: '16.5px',\n                        }\n                    }}\n                  >\n                    {workoutSplits.map((option) => (\n                      <MenuItem key={option} value={option}>\n                        <Checkbox checked={workoutSplit.indexOf(option) > -1} />\n                        <ListItemText primary={option} />\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth required>\n                  <InputLabel id=\"pain-level-label\">Pain Level (1-10)</InputLabel>\n                  <Select\n                    labelId=\"pain-level-label\"\n                    value={painLevel}\n                    onChange={(e) => setPainLevel(e.target.value)}\n                    label=\"Pain Level (1-10)\"\n                    sx={{\n                        // Increased height and padding for better visibility and touch target\n                        minHeight: '56px', // Standard TextField height\n                        '.MuiSelect-select': {\n                            paddingTop: '16.5px',\n                            paddingBottom: '16.5px',\n                        }\n                    }}\n                  >\n                    <MenuItem value=\"\">Select Level</MenuItem>\n                    {painLevels.map((level) => (\n                      <MenuItem key={level} value={level}>{level}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              {/* Notes Field */}\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Notes\"\n                  multiline\n                  rows={3}\n                  fullWidth\n                  value={notes}\n                  onChange={(e) => setNotes(e.target.value)}\n                />\n              </Grid>\n\n              {/* Supplements Section */}\n              <Grid item xs={12}>\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\n                  <Typography variant=\"subtitle1\" sx={{ color: 'text.secondary' }}>Supplements:</Typography>\n                  <Button\n                    variant=\"contained\"\n                    sx={{ backgroundColor: 'rgba(106, 115, 125, 0.5)', '&:hover': { backgroundColor: 'rgba(84, 92, 100, 0.7)' } }}\n                    onClick={() => setIsManageSupplementsOpen(true)}\n                  >\n                    Manage Supplements\n                  </Button>\n                </Box>\n                <Grid container spacing={1}>\n                  {formSupplements.map((sup, index) => (\n                    <Grid item xs={12} sm={6} key={index}>\n                      <Box display=\"flex\" alignItems=\"center\">\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={sup.taken}\n                              onChange={(e) => handleSupplementCheckboxChange(sup.name, e.target.checked)}\n                            />\n                          }\n                          label={<Typography sx={{ color: 'text.secondary' }}>{sup.name}</Typography>}\n                        />\n                        {sup.taken && (\n                          <TextField\n                            size=\"small\"\n                            placeholder=\"Quantity\"\n                            value={sup.quantity}\n                            onChange={(e) => handleSupplementQuantityChange(sup.name, e.target.value)}\n                            sx={{ ml: 1, flexGrow: 1 }}\n                          />\n                        )}\n                      </Box>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n\n              {/* Form Action Buttons */}\n              <Grid item xs={12} display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n                {currentEditingIndex > -1 && (\n                  <Button variant=\"contained\" color=\"secondary\" onClick={resetForm}>\n                    Cancel Edit\n                  </Button>\n                )}\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  {currentEditingIndex > -1 ? 'Update Entry' : 'Add Entry'}\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n\n        {currentTab === 1 && (\n          <Box sx={{ mt: 2, p: 4 }} component={Paper} elevation={0}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>Summary Statistics</Typography>\n            <Grid container spacing={2} sx={{ mt: 2 }}>\n              <Grid item xs={12} sm={6} md={4}>\n                <Typography variant=\"body2\"><strong>Total Entries:</strong> {stats.totalEntries}</Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Typography variant=\"body2\"><strong>Average Weight:</strong> {stats.avgWeight}</Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Typography variant=\"body2\"><strong>Average BMI:</strong> {stats.avgBMI}</Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Typography variant=\"body2\"><strong>Most Frequent Workout:</strong> {stats.mostFrequentWorkout}</Typography>\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Typography variant=\"body2\"><strong>Avg Pain Level:</strong> {stats.avgPainLevel}</Typography>\n              </Grid>\n              {Object.entries(stats.supplementFrequencies).map(([name, freq]) => (\n                <Grid item xs={12} sm={6} md={4} key={name}>\n                  <Typography variant=\"body2\"><strong>{name} Taken:</strong> {freq}</Typography>\n                </Grid>\n              ))}\n            </Grid>\n            <Box display=\"flex\" justifyContent=\"center\" mt={4}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={fetchFitnessInsight}\n                startIcon={<PsychologyIcon />}\n                disabled={isLlmLoading || fitnessEntries.length === 0}\n              >\n                {isLlmLoading ? <CircularProgress size={24} color=\"inherit\" /> : 'Get Fitness Insights ✨'}\n              </Button>\n            </Box>\n          </Box>\n        )}\n\n        {currentTab === 2 && (\n          <Box sx={{ mt: 2, p: 4 }} component={Paper} elevation={0}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>Filter & Sort Entries</Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={4}>\n                <TextField\n                  label=\"Start Date\"\n                  type=\"date\"\n                  fullWidth\n                  value={filterStartDate}\n                  onChange={(e) => setFilterStartDate(e.target.value)}\n                  InputLabelProps={{ shrink: true }}\n                />\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <TextField\n                  label=\"End Date\"\n                  type=\"date\"\n                  fullWidth\n                  value={filterEndDate}\n                  onChange={(e) => setFilterEndDate(e.target.value)}\n                  InputLabelProps={{ shrink: true }}\n                />\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"filter-workout-label\">Filter Workout</InputLabel>\n                  <Select\n                    labelId=\"filter-workout-label\"\n                    value={filterWorkout}\n                    onChange={(e) => setFilterWorkout(e.target.value)}\n                    label=\"Filter Workout\"\n                  >\n                    <MenuItem value=\"\">All Workouts</MenuItem>\n                    {workoutSplits.map((option) => (\n                      <MenuItem key={option} value={option}>{option}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} display=\"flex\" justifyContent=\"center\" gap={2}>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => { setIsFilteredViewActive(true); setCurrentTab(3); }}>\n                  Apply Filters\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n                  setFilterStartDate('');\n                  setFilterEndDate('');\n                  setFilterWorkout('');\n                  setSortOrder('desc');\n                  setIsFilteredViewActive(false);\n                  setCurrentTab(3);\n                }}>\n                  Clear Filters\n                </Button>\n              </Grid>\n              <Grid item xs={12} sx={{ mt: 2 }}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"sort-order-label\">Sort By Date</InputLabel>\n                  <Select\n                    labelId=\"sort-order-label\"\n                    value={sortOrder}\n                    onChange={(e) => setSortOrder(e.target.value)}\n                    label=\"Sort By Date\"\n                  >\n                    <MenuItem value=\"desc\">Newest First</MenuItem>\n                    <MenuItem value=\"asc\">Oldest First</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n\n        {currentTab === 3 && (\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>Your Progress</Typography>\n            {entriesToDisplay.length === 0 ? (\n              <Typography variant=\"body1\" align=\"center\" sx={{ color: 'text.disabled', mt: 3 }}>\n                No entries yet. Add one above!\n              </Typography>\n            ) : (\n              <List sx={{ '& > div': { mb: 2, p: 2, borderRadius: '10px' }, mt: 3 }}>\n                {entriesToDisplay.map((entry, index) => {\n                  const displayWeight = convertWeight(entry.weight, 'kg', unitSystem === 'metric' ? 'kg' : 'lbs').toFixed(1);\n                  let displayHeight = 'N/A';\n                  if (entry.height) {\n                    if (unitSystem === 'metric') {\n                      displayHeight = `${entry.height.toFixed(1)} cm`;\n                    } else {\n                      const convertedHeight = convertCmToDisplayHeight(entry.height, 'ft/in');\n                      displayHeight = `${convertedHeight.feet}' ${convertedHeight.inches.toFixed(1)}''`;\n                    }\n                  }\n                  const bmi = calculateBMI(entry.weight, entry.height);\n                  const workoutSplitDisplay = Array.isArray(entry.workoutSplit) ? entry.workoutSplit.join(', ') : entry.workoutSplit;\n\n                  let supplementsDisplay = 'None';\n                  if (entry.supplements && entry.supplements.length > 0) {\n                      const takenSupplements = entry.supplements.filter(s => s.taken);\n                      if (takenSupplements.length > 0) {\n                          supplementsDisplay = takenSupplements.map(s => {\n                              return s.quantity ? `${s.name} (${s.quantity})` : s.name;\n                          }).join(', ');\n                      }\n                  }\n\n                  return (\n                    <Paper key={index} elevation={2}>\n                      <ListItem alignItems=\"flex-start\">\n                        <ListItemText\n                          primary={\n                            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                              <Typography variant=\"h6\">{entry.date}</Typography>\n                              <Typography variant=\"body2\" sx={{ color: 'text.disabled' }}>\n                                Weight: {displayWeight} {unitSystem === 'metric' ? 'kg' : 'lbs'}\n                              </Typography>\n                            </Box>\n                          }\n                          secondary={\n                            <React.Fragment>\n                              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" display=\"block\">\n                                <strong>Height:</strong> {displayHeight}\n                              </Typography>\n                              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" display=\"block\">\n                                <strong>BMI:</strong> {bmi !== null ? bmi : 'N/A'}\n                              </Typography>\n                              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" display=\"block\">\n                                <strong>Workout:</strong> {workoutSplitDisplay}\n                              </Typography>\n                              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" display=\"block\">\n                                <strong>Pain Level:</strong> {entry.painLevel}\n                              </Typography>\n                              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" display=\"block\">\n                                <strong>Supplements:</strong> {supplementsDisplay}\n                              </Typography>\n                              {entry.notes && (\n                                <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" display=\"block\" sx={{ whiteSpace: 'pre-wrap' }}>\n                                  <strong>Notes:</strong> {entry.notes}\n                                </Typography>\n                              )}\n                            </React.Fragment>\n                          }\n                        />\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => handleEditEntry(index)}>\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDeleteEntry(index)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    </Paper>\n                  );\n                })}\n              </List>\n            )}\n            <Box display=\"flex\" justifyContent=\"center\" gap={2} mt={4}>\n              <Button variant=\"contained\" color=\"success\" onClick={handleDownloadCsv}>\n                Download as CSV\n              </Button>\n              <Button variant=\"contained\" color=\"error\" onClick={handleClearAllData}>\n                Clear All Data\n              </Button>\n            </Box>\n          </Box>\n        )}\n\n        {/* Supplement Management Dialog */}\n        <Dialog open={isManageSupplementsOpen} onClose={() => setIsManageSupplementsOpen(false)}>\n          <DialogTitle>Manage Custom Supplements</DialogTitle>\n          <DialogContent>\n            <Box display=\"flex\" gap={1} mb={2}>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"New supplement name\"\n                fullWidth\n                value={newSupplementName}\n                onChange={(e) => setNewSupplementName(e.target.value)}\n                onKeyPress={(e) => { if (e.key === 'Enter') { handleAddSupplement(); e.preventDefault(); } }}\n              />\n              <Button variant=\"contained\" color=\"primary\" onClick={handleAddSupplement} startIcon={<AddIcon />}>\n                Add\n              </Button>\n            </Box>\n            <List>\n              {customSupplements.length === 0 ? (\n                <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.disabled', mt: 2 }}>\n                  No custom supplements added yet.\n                </Typography>\n              ) : (\n                customSupplements.map((name, index) => (\n                  <ListItem key={name} sx={{ bgcolor: 'background.default', mb: 1, borderRadius: '4px' }}>\n                    <ListItemText primary={name} />\n                    <ListItemSecondaryAction>\n                      <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDeleteCustomSupplement(name)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))\n              )}\n            </List>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setIsManageSupplementsOpen(false)} variant=\"outlined\" startIcon={<CloseIcon />}>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Confirmation Dialog for Clear All Data */}\n        <Dialog\n          open={isConfirmClearOpen}\n          onClose={cancelClearAllData}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Confirm Clear All Data\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you want to delete ALL your fitness data? This action cannot be undone.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={cancelClearAllData} color=\"secondary\" autoFocus>\n              Cancel\n            </Button>\n            <Button onClick={confirmClearAllData} color=\"error\">\n              Delete All\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Confirmation Dialog for Delete Single Entry */}\n        <Dialog\n          open={isConfirmDeleteEntryOpen}\n          onClose={cancelDeleteEntry}\n          aria-labelledby=\"delete-entry-dialog-title\"\n          aria-describedby=\"delete-entry-dialog-description\"\n        >\n          <DialogTitle id=\"delete-entry-dialog-title\">{\"Confirm Delete Entry\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"delete-entry-dialog-description\">\n              Are you sure you want to delete this entry? This action cannot be undone.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={cancelDeleteEntry} color=\"secondary\" autoFocus>\n              Cancel\n            </Button>\n            <Button onClick={confirmDeleteEntry} color=\"error\">\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog for Fitness Insights */}\n        <Dialog\n          open={isInsightDialogOpen}\n          onClose={() => setIsInsightDialogOpen(false)}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <DialogTitle>Fitness Insights from Gemini ✨</DialogTitle>\n          <DialogContent dividers>\n            {isLlmLoading ? (\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"150px\">\n                <CircularProgress />\n                <Typography variant=\"body1\" sx={{ ml: 2 }}>Generating insights...</Typography>\n              </Box>\n            ) : (\n              llmInsight ? (\n                <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>{llmInsight}</Typography>\n              ) : (\n                <Typography variant=\"body1\" color=\"error\">Could not retrieve insights.</Typography>\n              )\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setIsInsightDialogOpen(false)} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}